# -*- coding: utf-8 -*-
#---------------------------------------------------------------------------
# Commodore 64 Character Bitmap Generator
#
# Author:  Mike Christle
# Version: 1.0
# Copyright (c) 2018
#
# Writes SPIN byte statements to the file char_set.txt.
#
# History:
# 1.0   - Original release - 10/10/2018.
#---------------------------------------------------------------------------
#┌──────────────────────────────────────────────────────────────────────────┐
#│                       TERMS OF USE: MIT License                          │                                                            
#├──────────────────────────────────────────────────────────────────────────┤
#│Permission is hereby granted, free of charge, to any person obtaining a   │
#│copy of this software and associated documentation files (the "Software"),│
#│to deal in the Software without restriction, including without limitation │
#│the rights to use, copy, modify, merge, publish, distribute, sublicense,  │
#│and/or sell copies of the Software, and to permit persons to whom the     │
#│Software is furnished to do so, subject to the following conditions:      │                                                           │
#│                                                                          │                                                  │
#│The above copyright notice and this permission notice shall be included in│
#│all copies or substantial portions of the Software.                       │
#│                                                                          │                                                  │
#│THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR│
#│IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  │
#│FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL   │
#│THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER│
#│LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING   │
#│FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER       │
#│DEALINGS IN THE SOFTWARE.                                                 │
#└──────────────────────────────────────────────────────────────────────────┘

bitmap = (
	(  "32 Space",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "33 !",
	0b00000000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00000000,
	0b00001000),
	(  "34 \"",
	0b00000000,
	0b00010100,
	0b00010100,
	0b00010100,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "35 #",
	0b00000000,
	0b00010100,
	0b00010100,
	0b00111110,
	0b00010100,
	0b00111110,
	0b00010100,
	0b00010100),
	(  "36 $",
	0b00000000,
	0b00001000,
	0b00011110,
	0b00101000,
	0b00011100,
	0b00001010,
	0b00111100,
	0b00001000),
	(  "37 %",
	0b00000000,
	0b00110000,
	0b00110010,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00100110,
	0b00000110),
	(  "38 &",
	0b00000000,
	0b00010000,
	0b00101000,
	0b00101000,
	0b00010000,
	0b00101010,
	0b00100100,
	0b00011010),
	(  "39 '",
	0b00000000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "40 (",
	0b00000000,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00010000,
	0b00010000,
	0b00001000,
	0b00000100),
	(  "41 )",
	0b00000000,
	0b00010000,
	0b00001000,
	0b00000100,
	0b00000100,
	0b00000100,
	0b00001000,
	0b00010000),
	(  "42 *",
	0b00000000,
	0b00001000,
	0b00101010,
	0b00011100,
	0b00001000,
	0b00011100,
	0b00101010,
	0b00001000),
	(  "43 +",
	0b00000000,
	0b00000000,
	0b00001000,
	0b00001000,
	0b00111110,
	0b00001000,
	0b00001000,
	0b00000000),
	(  "44 ,",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00001000,
	0b00001000,
	0b00010000),
	(  "45 -",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00111110,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "46 .",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00001000,
	0b00000000),
	(  "47 /",
	0b00000000,
	0b00000000,
	0b00000010,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00100000,
	0b00000000),
	(  "48 0",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100110,
	0b00101010,
	0b00110010,
	0b00100010,
	0b00011100),
	(  "49 1",
	0b00000000,
	0b00001000,
	0b00011000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00011100),
	(  "50 2",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00000010,
	0b00001100,
	0b00010000,
	0b00100000,
	0b00111110),
	(  "51 3",
	0b00000000,
	0b00111110,
	0b00000010,
	0b00000100,
	0b00001100,
	0b00000010,
	0b00100010,
	0b00011100),
	(  "52 4",
	0b00000000,
	0b00000100,
	0b00001100,
	0b00010100,
	0b00100100,
	0b00111110,
	0b00000100,
	0b00000100),
	(  "53 5",
	0b00000000,
	0b00111110,
	0b00100000,
	0b00111100,
	0b00000010,
	0b00000010,
	0b00100010,
	0b00011100),
	(  "54 6",
	0b00000000,
	0b00001110,
	0b00010000,
	0b00100000,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00011100),
	(  "55 7",
	0b00000000,
	0b00111110,
	0b00000010,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00010000,
	0b00010000),
	(  "56 8",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100010,
	0b00011100,
	0b00100010,
	0b00100010,
	0b00011100),
	(  "57 9",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100010,
	0b00011110,
	0b00000010,
	0b00000100,
	0b00111000),
	(  "58 :",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00001000,
	0b00000000,
	0b00001000,
	0b00000000,
	0b00000000),
	(  "59 ;",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00001000,
	0b00000000,
	0b00001000,
	0b00001000,
	0b00010000),
	(  "60 <",
	0b00000000,
	0b00000010,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00001000,
	0b00000100,
	0b00000010),
	(  "61 =",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00111110,
	0b00000000,
	0b00111110,
	0b00000000,
	0b00000000),
	(  "62 >",
	0b00000000,
	0b00100000,
	0b00010000,
	0b00001000,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00100000),
	(  "63 ?",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00000100,
	0b00001000,
	0b00001000,
	0b00000000,
	0b00001000),
	(  "64 @",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00101010,
	0b00101110,
	0b00101100,
	0b00100000,
	0b00011110),
	(  "65 A",
	0b00000000,
	0b00110000,
	0b11001100,
	0b11001100,
	0b11001100,
	0b11111100,
	0b11001100,
	0b11001100),
	(  "66 B",
	0b00000000,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00111100),
	(  "67 C",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00100010,
	0b00011100),
	(  "68 D",
	0b00000000,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00111100),
	(  "69 E",
	0b00000000,
	0b00111110,
	0b00100000,
	0b00100000,
	0b00111100,
	0b00100000,
	0b00100000,
	0b00111110),
	(  "70 F",
	0b00000000,
	0b00111110,
	0b00100000,
	0b00100000,
	0b00111100,
	0b00100000,
	0b00100000,
	0b00100000),
	(  "71 G",
	0b00000000,
	0b00011110,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00100110,
	0b00100010,
	0b00011110),
	(  "72 H",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00111110,
	0b00100010,
	0b00100010,
	0b00100010),
	(  "73 I",
	0b00000000,
	0b00011100,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00011100),
	(  "74 J",
	0b00000000,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00000010,
	0b00100010,
	0b00011100),
	(  "75 K",
	0b00000000,
	0b00100010,
	0b00100100,
	0b00101000,
	0b00110000,
	0b00101000,
	0b00100100,
	0b00100010),
	(  "76 L",
	0b00000000,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00100000,
	0b00111110),
	(  "77 M",
	0b00000000,
	0b00100010,
	0b00110110,
	0b00101010,
	0b00101010,
	0b00100010,
	0b00100010,
	0b00100010),
	(  "78 N",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00110010,
	0b00101010,
	0b00100110,
	0b00100010,
	0b00100010),
	(  "79 O",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00011100),
	(  "80 P",
	0b00000000,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00111100,
	0b00100000,
	0b00100000,
	0b00100000),
	(  "81 Q",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00101010,
	0b00100100,
	0b00011010),
	(  "82 R",
	0b00000000,
	0b00111100,
	0b00100010,
	0b00100010,
	0b00111100,
	0b00101000,
	0b00100100,
	0b00100010),
	(  "83 S",
	0b00000000,
	0b00011100,
	0b00100010,
	0b00100000,
	0b00011100,
	0b00000010,
	0b00100010,
	0b00011100),
	(  "84 T",
	0b00000000,
	0b00111110,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000),
	(  "85 U",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00011100),
	(  "86 V",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00010100,
	0b00001000),
	(  "87 W",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00100010,
	0b00101010,
	0b00101010,
	0b00110110,
	0b00100010),
	(  "88 X",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00010100,
	0b00001000,
	0b00010100,
	0b00100010,
	0b00100010),
	(  "89 Y",
	0b00000000,
	0b00100010,
	0b00100010,
	0b00010100,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000),
	(  "90 Z",
	0b00000000,
	0b00111110,
	0b00000010,
	0b00000100,
	0b00001000,
	0b00010000,
	0b00100000,
	0b00111110),
	(  "91 [",
	0b00000000,
	0b00111110,
	0b00110000,
	0b00110000,
	0b00110000,
	0b00110000,
	0b00110000,
	0b00111110),
	(  "92 \\",
	0b00000000,
	0b00000000,
	0b00100000,
	0b00010000,
	0b00001000,
	0b00000100,
	0b00000010,
	0b00000000),
	(  "93 ]",
	0b00000000,
	0b00111110,
	0b00000110,
	0b00000110,
	0b00000110,
	0b00000110,
	0b00000110,
	0b00111110),
	(  "94 ^",
	0b00000000,
	0b00001000,
	0b00010100,
	0b00100010,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "95 _",
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b01111111),
	(  "96 `",
	0b00000000,
	0b00010000,
	0b00001000,
	0b00000100,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "123 {",
	0b00000000,
	0b00001110,
	0b00011000,
	0b00011000,
	0b00110000,
	0b00011000,
	0b00011000,
	0b00001110),
	(  "124 |",
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000,
	0b00001000),
	(  "125 }",
	0b00000000,
	0b00111000,
	0b00001100,
	0b00001100,
	0b00000110,
	0b00001100,
	0b00001100,
	0b00111000),
	(  "126 ~",
	0b00000000,
	0b00011010,
	0b00101100,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000),
	(  "127 Left Arrow",
	0b00000000,
	0b00010000,
	0b00110000,
	0b01111111,
	0b01111111,
	0b00110000,
	0b00010000,
	0b00000000)
)

#----------------------------------------------------------------------------
def flip_bits(abyte):

    val = 0
    for _ in range(8):
        val <<= 1
        if abyte & 1:
            val |= 1
        abyte >>= 1

    return val

#----------------------------------------------------------------------------
print("Make Apple II Char Set -> char_set_4pixel.txt")

with open("char_set_4pixel.txt", "wt") as ofp:
    for tpl in bitmap:

        ofp.write("\t\t\tbyte\t")
        for i in range(1, 8):
            val = flip_bits(tpl[i])
            s1 = "${:02X}, ".format(val)
            ofp.write(s1)

        val = flip_bits(tpl[8])
        s1 = "${:02X} ' {} \n".format(val, tpl[0])
        ofp.write(s1)
    



